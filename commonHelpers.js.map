{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('.datetime-picker');\nconst start = document.querySelector('.strt-btn');\nconst daysLeft = document.querySelector('[data-days]');\nconst hoursLeft = document.querySelector('[data-hours]');\nconst minutesLeft = document.querySelector('[data-minutes]');\nconst secondsLeft = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nstart.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  // minDate: new Date(), \n  \n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (userSelectedDate <= currentDate) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n      });\n      start.disabled = true;\n    } else {\n      start.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  function addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n\n  return { days, hours, minutes, seconds };\n}\n\nstart.addEventListener('click', () => {\n  setInterval(updeteCountdown, 1000);\n  start.disabled = true;\n});\n\nfunction updeteCountdown() {\n  const currentDate = new Date();\n  const difference = userSelectedDate - currentDate;\n\n  if (difference <= 0) {\n    daysLeft.textContent = '00';\n    hoursLeft.textContent = '00';\n    minutesLeft.textContent = '00';\n    secondsLeft.textContent = '00';\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(difference);\n\n  daysLeft.textContent = days;\n  hoursLeft.textContent = hours;\n  minutesLeft.textContent = minutes;\n  secondsLeft.textContent = seconds;\n}"],"names":["start","daysLeft","hoursLeft","minutesLeft","secondsLeft","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","addLeadingZero","value","days","hours","minutes","seconds","updeteCountdown","difference"],"mappings":"+IAKc,SAAS,cAAc,kBAAkB,EACvD,MAAMA,EAAQ,SAAS,cAAc,WAAW,EAC1CC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EACJL,EAAM,SAAW,GAEjB,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAGjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAE9BF,GADgB,IAAI,MAEtBG,EAAS,MAAM,CACb,QAAS,oCACjB,CAAO,EACDR,EAAM,SAAW,IAEjBA,EAAM,SAAW,EAEpB,CACH,EAEAS,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAOrB,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CAGD,MAAMC,EAAOF,EAAe,KAAK,MAAMD,EAAK,KAAG,CAAC,EAE1CI,EAAQH,EAAe,KAAK,MAAOD,EAAK,MAAO,IAAI,CAAC,EAEpDK,EAAUJ,EAAe,KAAK,MAAQD,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEjEM,EAAUL,EACd,KAAK,MAASD,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAGE,MAAO,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAjB,EAAM,iBAAiB,QAAS,IAAM,CACpC,YAAYkB,EAAiB,GAAI,EACjClB,EAAM,SAAW,EACnB,CAAC,EAED,SAASkB,GAAkB,CAEzB,MAAMC,EAAad,EADC,IAAI,KAGxB,GAAIc,GAAc,EAAG,CACnBlB,EAAS,YAAc,KACvBC,EAAU,YAAc,KACxBC,EAAY,YAAc,KAC1BC,EAAY,YAAc,KAC1B,MACD,CAED,KAAM,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYP,EAAUS,CAAU,EAE9DlB,EAAS,YAAca,EACvBZ,EAAU,YAAca,EACxBZ,EAAY,YAAca,EAC1BZ,EAAY,YAAca,CAC5B"}